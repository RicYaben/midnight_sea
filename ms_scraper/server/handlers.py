"""
Creates an Api Endpoint that allows communication with the Storage service.
"""
import sys

import grpc

# Handlers
from ms_scraper.protos import scraper_pb2_grpc
from ms_scraper.server.interfaces import Service, ServiceFactory

# Services to register
from ms_scraper.server.services import scraper


def lazy_get_handler(service: str):
    """Returns the handler of the service, generated by the .proto file"""
    service_fmt = f"{service.lower()}_pb2_grpc"
    ret = getattr(sys.modules[__name__], service_fmt)

    return ret


def _add_service_endpoints_to_server(
    name: str, service: Service, server: grpc.Server
) -> None:
    """Retrieves the API endpoint for some class and adds it to the server"""

    # Get the grpc module
    handler = lazy_get_handler(name)

    # Capitalise the name of the service to match the name of the class
    add_handler = getattr(handler, f"add_{name}Servicer_to_server")

    # Add the handler to the server
    add_handler(service(), server)


def add_handlers(server: grpc.Server) -> grpc.Server:
    """Add the service handlers to a server"""
    services: dict = ServiceFactory.services

    for name, service in services.items():
        _add_service_endpoints_to_server(name=name, service=service, server=server)

    return server
