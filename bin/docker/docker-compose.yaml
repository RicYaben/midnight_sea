# Copyright 2023 Ricardo Yaben
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
x-project:
  &project
  stdin_open: true
  tty: true

services:

  scraper:
    container_name: scraper
    command: scraper
    <<: *project
    build:
      context: ${PWD:-../..}
      dockerfile: bin/docker/Dockerfile
      args:
        - PROJECT=scraper

  storage:
    container_name: storage
    command: storage 'db={address:postgres,username:username,password:password}'
    <<: *project
    build:
      context: ${PWD:-../..}
      dockerfile: bin/docker/Dockerfile
      args:
        - PROJECT=storage

  crawler:
    container_name: crawler
    command: crawler 'proxy=proxy'
    <<: *project
    build:
      context: ${PWD:-../..}
      dockerfile: bin/docker/Dockerfile
      args:
        - PROJECT=crawler

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=${DB_NAME:-midnight_sea}
      - POSTGRES_USER=${DB_USER:-username}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    volumes:
      - ms:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-midnight_sea@ms.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - ${PROXY_HOST:-proxy}
    restart: unless-stopped

  # Network Proxy
  proxy:
    # https://codeberg.org/diva.exchange/i2p.git
    image: divax/i2p:current-i2p-tor
    container_name: ${PROXY_HOST:-proxy}
    ports:
      - "7070:7070"
      - "4444:4444"
      - "9050:9050"
      - "0.0.0.0:8080:8080"
    restart: on-failure
    environment:
      - PORT_TOR=9050
      - PORT_HTTP_PROXY=4444
      - ENABLE_HTTPPROXY=1

  pgbackups:
    container_name: Backup
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ../backups:/backups
    links:
      - postgres:postgres
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${DB_NAME:-midnight_sea}
      - POSTGRES_USER=${DB_USER:-username}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
      - SCHEDULE=@every 0h30m00s
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=81

volumes:
  ms: null
  pgadmin: null