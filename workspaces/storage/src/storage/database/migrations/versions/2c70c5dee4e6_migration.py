# Copyright 2023 Ricardo Yaben
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Migration

Revision ID: 2c70c5dee4e6
Revises: 
Create Date: 2022-06-07 14:59:20.268229

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2c70c5dee4e6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('item_crytos')
    op.create_unique_constraint(None, 'crawl', ['id'])
    op.create_unique_constraint(None, 'crypto', ['id'])
    op.create_unique_constraint(None, 'item', ['id'])
    op.drop_constraint('item_page_id_fkey', 'item', type_='foreignkey')
    op.create_foreign_key(None, 'item', 'page', ['page_id'], ['id'], ondelete='CASCADE')
    op.create_unique_constraint(None, 'market', ['id'])
    op.create_unique_constraint(None, 'page', ['url', 'market_id'])
    op.create_unique_constraint(None, 'page', ['id'])
    op.create_unique_constraint(None, 'reputation', ['id'])
    op.add_column('vendor', sa.Column('positive_fb', sa.Float(), nullable=True))
    op.add_column('vendor', sa.Column('negative_fb', sa.Float(), nullable=True))
    op.add_column('vendor', sa.Column('disputes_fb', sa.Float(), nullable=True))
    op.add_column('vendor', sa.Column('total_fb', sa.Float(), nullable=True))
    op.create_unique_constraint(None, 'vendor', ['id'])
    op.drop_constraint('vendor_items_vendor_id_fkey', 'vendor_items', type_='foreignkey')
    op.drop_constraint('vendor_items_item_id_fkey', 'vendor_items', type_='foreignkey')
    op.create_foreign_key(None, 'vendor_items', 'vendor', ['vendor_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'vendor_items', 'item', ['item_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vendor_items', type_='foreignkey')
    op.drop_constraint(None, 'vendor_items', type_='foreignkey')
    op.create_foreign_key('vendor_items_item_id_fkey', 'vendor_items', 'item', ['item_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('vendor_items_vendor_id_fkey', 'vendor_items', 'vendor', ['vendor_id'], ['id'])
    op.drop_constraint(None, 'vendor', type_='unique')
    op.drop_column('vendor', 'total_fb')
    op.drop_column('vendor', 'disputes_fb')
    op.drop_column('vendor', 'negative_fb')
    op.drop_column('vendor', 'positive_fb')
    op.drop_constraint(None, 'reputation', type_='unique')
    op.drop_constraint(None, 'page', type_='unique')
    op.drop_constraint(None, 'page', type_='unique')
    op.drop_constraint(None, 'market', type_='unique')
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.create_foreign_key('item_page_id_fkey', 'item', 'page', ['page_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint(None, 'item', type_='unique')
    op.drop_constraint(None, 'crypto', type_='unique')
    op.drop_constraint(None, 'crawl', type_='unique')
    op.create_table('item_crytos',
    sa.Column('item_id', sa.CHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('crypto_id', sa.CHAR(length=36), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['crypto_id'], ['crypto.id'], name='item_crytos_crypto_id_fkey'),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], name='item_crytos_item_id_fkey'),
    sa.PrimaryKeyConstraint('item_id', 'crypto_id', name='item_crytos_pkey')
    )
    # ### end Alembic commands ###
